---
import Base from "../layouts/Base.astro";

interface paragraph {
	lines: (string | emphasis | link)[];
}

interface emphasis {
	text: string;
}

interface link {
	text: string;
	href: string;
}

function isLink(element: emphasis | link): element is link {
	return (element as link).href !== undefined;
}

const paragraphs: paragraph[] = [
	{
		lines: ["Welcome to", { href: "https://powerd6.org", text: "powerd6" }],
	},
	{
		lines: [
			"We are working on a new and exciting way to",
			{ text: "create" },
			",",
			{ text: "extend" },
			", and",
			{ text: "share" },
			"tabletop role-playing games",
		],
	},
	{
		lines: [
			"this website is currently",
			{
				href: "https://github.com/power-d6/landing-page",
				text: "under construction",
			},
			"but we would",
			{ text: "love" },
			"for you to follow",
			{
				href: "https://github.com/power-d6/",
				text: "our development",
			},
			"and maybe contribute",
			{ href: "https://github.com/power-d6/", text: "here" },
		],
	},
];
---

<Base title="powerd6">
	<main
		class="h-screen w-screen flex flex-col justify-center align-middle text-5xl uppercase text-justify"
	>
		{
			paragraphs.map((paragraph) => (
				<div class="m-auto w-3/5">
					<div class="flex justify-between flex-wrap gap-4">
						{paragraph.lines.flatMap((line) => {
							switch (typeof line) {
								case "string": {
									return line.split(" ").map((word) => <p>{word}</p>);
								}
								case "object": {
									if (isLink(line)) {
										return (
											<a
												href={line.href}
												class="hover:text-emerald-300  transition-all duration-300"
											>
												{line.text}
											</a>
										);
									} else {
										return (
											<strong class="hover:text-indigo-300 transition-all duration-300">
												{line.text}
											</strong>
										);
									}
								}
							}
						})}
					</div>
				</div>
			))
		}
	</main>
</Base>
